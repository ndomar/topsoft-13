class PostsController < ApplicationController
<<<<<<< HEAD
	include PostsHelper
 
 	def index
        @posts = Post.order("posts.content ASC")
    end


   # Riham Gamal 22-3871
 	# add a new post 

	def newPost
		@group_id = params[:id]
		@post = Post.new
	end
=======
 #  def delete
 #    @post = Post.find(params[:id])
 #  end
  
 #  def destroy
 #    Post.find(params[:id]).destroy
 #    redirect_to(:action => 'list')
 #  end

 #    def list 
	# @post = Post.all
 #    end

>>>>>>> f68e2668b8f2ca3aeddbfd52994752d21d818748

	#Author Riham Gamal 22-3871, Mariam Ismail 22-3456
	# create a new post
	# if the post is saved, added to this method the group-id 
	def createPost

		@post = Post.new(params[:post])
<<<<<<< HEAD

		if @post.save
			flash[:notice] = "Post successfully created"
			#redirect_to(:controller => 'groups',:action => 'show', :id =>params[:id])
			respond_to do |format|
				format.html{redirect_to(:controller => 'groups',:action => 'show', :id =>params[:id])}
				format.js
			end
		#Author Riham Gamal 22-3871
		# if the post is not saved, 
=======
		if @post.save
			respond_to do |format|
				format.html{redirect_to(:controller => 'groups',:action => 'show', :id =>params[:id])}
				format.js
		end
>>>>>>> f68e2668b8f2ca3aeddbfd52994752d21d818748
		else
			redirect_to(:controller => 'groups',:action => 'show', :id =>params[:id])
		end

	end

<<<<<<< HEAD
	# Riham Gamal 22-3871
	# find the post you want to edit

	def editPost	
	    @group_id = params[:group_id]
	    @post_id=params[:post_id]
		@post = Post.find(params[:id])

end

	# Riham Gamal 22-3871
	# update the post by finding its id and changing the fields


	def updatePost
		 @post = Post.find(params[:post_id])
        
		if @post.update_attributes(params[:post])

			flash[:notice] = "Post successfully updated"
			redirect_to(:controller => 'groups',:action => 'show', :id => params[:group_id])
		else

			flash[:notice] = "Post could not be updated"
			 render("editPost")
		end




=======

	# Riham Gamal 22-3871, Mariam Ismail 22-3456
	# update the post by finding its id and changing the fields
	# takes the group-id and redirects back to show group

	respond_to :html, :json
	def updatePost
		 @post = Post.find(params[:post_id])
		 @group_id = params[:group_id]
	     @post_id=params[:post_id]
	     @post.update_attributes(params[:post])
		 respond_with @post
>>>>>>> f68e2668b8f2ca3aeddbfd52994752d21d818748
	end


<<<<<<< HEAD
	# Salma El Ruby 22-4649
	# deletes posts
	  def delete
	    @post = Post.find(params[:id])
	  end
=======

>>>>>>> f68e2668b8f2ca3aeddbfd52994752d21d818748

	  def destroy
		 @group_id = params[:group_id]
	    Post.find(params[:id]).destroy
<<<<<<< HEAD
	    flash[:notice] = "Post successfully deleted"
	    redirect_to(:action => 'list')
	  end


# Salma El Ruby 22-4649
# displays all available posts 
    def list 
	@post = Post.all
	# Post.getposts (32)
       
    end
end
=======
	    redirect_to(:controller => 'groups',:action => 'show', :id => params[:group_id])
	  end

		# Salma El Ruby 22-4649
		# displays all available posts 
	    def list 
		@post = Post.all
	    end	

end
>>>>>>> f68e2668b8f2ca3aeddbfd52994752d21d818748
